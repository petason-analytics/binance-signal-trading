# development / production
NODE_ENV=development
#NODE_ENV=production

APP_SSL=false
APP_PORT=13030
ADMIN_PORT=13031

# csv styled list items
CORS_ALLOW_ORIGINS="http://localhost:13030,https://example.com"

# Auth
NFT_METAMASK_MESSAGE='Lucis sign'
JWT_SECRET=1231231
JWT_EXPIRE=1d
# ADMIN_REGISTER_ENABLE=false
# SEND_GRID_ACCESS_KEY=123
# You also need to put public/private key files into /secrets folder

# Binance trading
BINANCE_API_KEY=
BINANCE_API_SECRET=

# Telegram
TELEGRAM_BOT_TOKEN=

#
# Error tracking
#
SENTRY_ENABLE=0
SENTRY_ENVIRONMENT=development
SENTRY_RELEASE=dev-HEAD

#
# file rotation logger: https://www.npmjs.com/package/nestjs-log
#
LOG_LEVEL="debug"
LOG_DIR="./logs"
LOG_DATE_PATTERN="YYYYMMDD_HH"
LOG_MAX_SIZE="1024M"
LOG_MAX_FILES="30d"

# REDIS
REDIS_PASSWORD=
REDIS_HOST=localhost
REDIS_PORT=6379

# PORT to connect container <=> container, let it always be 3306 if you using docker.
DB_TYPE=mysql
DB_HOST=lucis_db
DB_PORT=3306
DB_USER=universal
DB_PASSWORD=
DB_NAME=lucis-launchpad

# enable both `prisma-client`- and `engine`-level debugging output, Let empty for prod
#DEBUG="prisma:client,prisma:engine"
DEBUG=\*
#DEBUG=""

# This was inserted by `prisma init`:
# Environment variables declared in this file are automatically made available to Prisma.
# See the documentation for more detail: https://pris.ly/d/prisma-schema#accessing-environment-variables-from-the-schema
# Prisma supports the native connection string format for PostgreSQL, MySQL, SQLite, SQL Server, MongoDB (Preview) and CockroachDB (Preview).
# See the documentation for all the connection string options: https://pris.ly/d/connection-strings
DATABASE_URL="mysql://root:pass_word@localhost:3306/lucis-launchpad"


